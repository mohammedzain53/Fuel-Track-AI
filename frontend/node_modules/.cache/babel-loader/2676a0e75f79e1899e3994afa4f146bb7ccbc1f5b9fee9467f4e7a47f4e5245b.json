{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\StationSearch.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/StationSearch.js\nimport React, { useState } from 'react';\nimport { findStations } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StationSearch({\n  onStationSelect\n}) {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [manualLocation, setManualLocation] = useState({\n    lat: '',\n    lng: ''\n  });\n  const [showManualInput, setShowManualInput] = useState(false);\n  const [lastDetectedLocation, setLastDetectedLocation] = useState(null);\n  async function searchNearby() {\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by this browser. Please enable location services.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setStations([]);\n    try {\n      // Request location with high accuracy\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 25000,\n          maximumAge: 30000 // 30 seconds cache - fresher location data\n        });\n      });\n      const {\n        latitude,\n        longitude,\n        accuracy,\n        altitude,\n        heading,\n        speed\n      } = position.coords;\n      console.log(`Location detected: ${latitude.toFixed(6)}, ${longitude.toFixed(6)} (accuracy: ${accuracy}m)`);\n      console.log(`Additional info: altitude: ${altitude}m, heading: ${heading}°, speed: ${speed}m/s`);\n\n      // Check if coordinates are reasonable for India\n      const isInIndia = latitude >= 6.0 && latitude <= 37.0 && longitude >= 68.0 && longitude <= 97.0;\n      if (!isInIndia) {\n        setError(`🌍 Location seems incorrect (${latitude.toFixed(4)}, ${longitude.toFixed(4)}). This doesn't appear to be in India. Please check your location settings.`);\n        return;\n      }\n\n      // Warn if location accuracy is poor\n      if (accuracy > 1000) {\n        setError(`⚠️ Location accuracy is low (${Math.round(accuracy)}m). Results may not be precise. Try moving to an open area for better GPS signal.`);\n      } else if (accuracy > 100) {\n        setError(`📍 Location accuracy is moderate (${Math.round(accuracy)}m). For best results, ensure you're outdoors with clear sky view.`);\n      }\n\n      // Store detected location\n      setLastDetectedLocation({\n        lat: latitude,\n        lng: longitude,\n        accuracy\n      });\n\n      // Show detected location to user for verification\n      setError(`📍 Location detected: ${latitude.toFixed(4)}, ${longitude.toFixed(4)} (±${Math.round(accuracy)}m)\\n\\n🔍 Please verify this is your current location. If not, use the Manual option below.`);\n      const data = await findStations(latitude, longitude);\n      if (data.success && data.stations) {\n        // New unified format\n        setStations(data.stations.map(station => ({\n          name: station.name,\n          vicinity: station.address,\n          place_id: station.id,\n          brand: station.brand,\n          distance: station.distance,\n          fuelTypes: station.fuelTypes,\n          openingHours: station.openingHours,\n          googleMapsUrl: station.googleMapsUrl,\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\n          coordinates: station.coordinates,\n          geometry: {\n            location: {\n              lat: station.lat,\n              lng: station.lng\n            }\n          }\n        })));\n      } else if (data.provider === 'google' && data.data && data.data.results) {\n        // Legacy Google format\n        setStations(data.data.results);\n      } else if (data.provider === 'osm' && data.data && data.data.elements) {\n        // Legacy OSM format\n        setStations(data.data.elements.map(e => ({\n          name: e.name || 'Unknown Station',\n          vicinity: e.address || 'Unknown Address',\n          place_id: e.id,\n          brand: e.brand,\n          distance: e.distance,\n          geometry: {\n            location: {\n              lat: e.lat,\n              lng: e.lon\n            }\n          }\n        })));\n      } else {\n        setStations([]);\n        setError('No stations found in your area. Try expanding your search or check your location.');\n      }\n    } catch (err) {\n      console.error('Station search error:', err);\n      if (err.code === 1) {\n        setError('❌ Location access denied. Please:\\n1. Click the location icon in your browser\\n2. Select \"Allow\" for location access\\n3. Try searching again');\n      } else if (err.code === 2) {\n        setError('📍 Location unavailable. Please check:\\n1. GPS is enabled on your device\\n2. You have internet connection\\n3. Try again in a few moments');\n      } else if (err.code === 3) {\n        setError('⏱️ Location request timed out. This might be due to:\\n1. Weak GPS signal\\n2. Try moving to an open area\\n3. Refresh and try again');\n      } else {\n        setError('⚠️ Failed to find stations. Please:\\n1. Check your internet connection\\n2. Ensure location services are enabled\\n3. Try again or add stations manually');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function searchManualLocation() {\n    if (!manualLocation.lat || !manualLocation.lng) {\n      setError('Please enter both latitude and longitude');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setStations([]);\n    try {\n      const data = await findStations(parseFloat(manualLocation.lat), parseFloat(manualLocation.lng));\n      if (data.success && data.stations) {\n        setStations(data.stations.map(station => ({\n          name: station.name,\n          vicinity: station.address,\n          place_id: station.id,\n          brand: station.brand,\n          distance: station.distance,\n          fuelTypes: station.fuelTypes,\n          openingHours: station.openingHours,\n          googleMapsUrl: station.googleMapsUrl,\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\n          coordinates: station.coordinates,\n          geometry: {\n            location: {\n              lat: station.lat,\n              lng: station.lng\n            }\n          }\n        })));\n      } else {\n        setStations([]);\n        setError('No stations found at the specified location.');\n      }\n    } catch (err) {\n      console.error('Manual search error:', err);\n      setError('Failed to search at the specified location. Please check coordinates and try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n  function selectStation(station) {\n    if (onStationSelect) {\n      onStationSelect({\n        name: station.name,\n        placeId: station.place_id,\n        address: station.vicinity || station.formatted_address,\n        brand: station.brand,\n        distance: station.distance\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Find Nearby Gas Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary flex-fill\",\n          onClick: searchNearby,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), \"Searching...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\uD83D\\uDCCD Use My Location\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => setShowManualInput(!showManualInput),\n          children: \"\\uD83D\\uDCDD Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted\",\n          children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"For Mysore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 16\n          }, this), \": Lat ~12.2958, Lng ~76.6394\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 71\n          }, this), \"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"For Bangalore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 16\n          }, this), \": Lat ~12.9716, Lng ~77.5946\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 74\n          }, this), \"\\uD83D\\uDCA1 If GPS shows wrong city, use Manual option above\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), showManualInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 p-3 bg-light rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Enter Location Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              className: \"form-control form-control-sm\",\n              placeholder: \"Latitude\",\n              value: manualLocation.lat,\n              onChange: e => setManualLocation({\n                ...manualLocation,\n                lat: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              className: \"form-control form-control-sm\",\n              placeholder: \"Longitude\",\n              value: manualLocation.lng,\n              onChange: e => setManualLocation({\n                ...manualLocation,\n                lng: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-success mt-2 w-100\",\n          onClick: searchManualLocation,\n          disabled: loading,\n          children: \"Search This Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted d-block mb-2\",\n            children: \"\\uD83D\\uDCA1 You can get coordinates from Google Maps by right-clicking on a location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group btn-group-sm w-100\",\n            role: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-info\",\n              onClick: () => setManualLocation({\n                lat: '12.2958',\n                lng: '76.6394'\n              }),\n              children: \"\\uD83D\\uDCCD Mysore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-info\",\n              onClick: () => setManualLocation({\n                lat: '12.9716',\n                lng: '77.5946'\n              }),\n              children: \"\\uD83D\\uDCCD Bangalore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-info\",\n              onClick: () => setManualLocation({\n                lat: '13.0827',\n                lng: '80.2707'\n              }),\n              children: \"\\uD83D\\uDCCD Chennai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${error.includes('📍 Location detected') ? 'alert-info' : 'alert-danger'}`,\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            margin: 0,\n            fontFamily: 'inherit'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), lastDetectedLocation && error.includes('📍 Location detected') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://www.google.com/maps?q=${lastDetectedLocation.lat},${lastDetectedLocation.lng}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"btn btn-sm btn-outline-primary me-2\",\n            children: \"\\uD83D\\uDDFA\\uFE0F Verify on Google Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-outline-secondary\",\n            onClick: () => {\n              setManualLocation({\n                lat: lastDetectedLocation.lat.toFixed(6),\n                lng: lastDetectedLocation.lng.toFixed(6)\n              });\n              setShowManualInput(true);\n            },\n            children: \"\\uD83D\\uDCDD Edit Coordinates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), stations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"\\u26FD Found \", stations.length, \" Nearby Stations:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted mb-2 d-block\",\n          children: [\"\\uD83D\\uDCCD Showing stations within 3km of your location.\", lastDetectedLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-info\",\n            children: [' ', \"(GPS accuracy: \\xB1\", Math.round(lastDetectedLocation.accuracy), \"m)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), \"Click \\\"View\\\" to verify on Google Maps.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: stations.slice(0, 10).map((station, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex w-100 justify-content-between align-items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-grow-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mb-1\",\n                  children: [station.name, station.brand && station.brand !== station.name && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: [\" (\", station.brand, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), station.distance && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-primary\",\n                  children: [\"\\uD83D\\uDCCF \", station.distance, \"m away\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group btn-group-sm\",\n                children: [station.googleMapsUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: station.googleMapsUrl,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"btn btn-outline-primary btn-sm\",\n                  title: \"View on Google Maps\",\n                  onClick: e => e.stopPropagation(),\n                  children: \"\\uD83D\\uDDFA\\uFE0F View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 25\n                }, this), station.googleMapsDirectionsUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: station.googleMapsDirectionsUrl,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"btn btn-outline-success btn-sm\",\n                  title: \"Get Directions\",\n                  onClick: e => e.stopPropagation(),\n                  children: \"\\uD83E\\uDDED Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2 text-muted\",\n              children: [\"\\uD83D\\uDCCD \", station.vicinity || station.formatted_address || 'Address not available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), station.coordinates && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-secondary\",\n                children: [\"\\uD83D\\uDCCC \", station.coordinates]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this), station.fuelTypes && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-info\",\n                children: [\"\\u26FD \", station.fuelTypes.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this), station.openingHours && station.openingHours !== 'Unknown' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-warning\",\n                children: [\"\\uD83D\\uDD52 \", station.openingHours]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success btn-sm w-100\",\n              onClick: () => selectStation(station),\n              children: \"\\u2728 Use This Station\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)]\n          }, station.place_id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"\\uD83D\\uDCA1 Click on any station to auto-fill it in your fuel entry form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(StationSearch, \"o5p3U4hvj9SCka473TvEE3e7jFY=\");\n_c = StationSearch;\nvar _c;\n$RefreshReg$(_c, \"StationSearch\");","map":{"version":3,"names":["React","useState","findStations","jsxDEV","_jsxDEV","Fragment","_Fragment","StationSearch","onStationSelect","_s","stations","setStations","loading","setLoading","error","setError","manualLocation","setManualLocation","lat","lng","showManualInput","setShowManualInput","lastDetectedLocation","setLastDetectedLocation","searchNearby","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","accuracy","altitude","heading","speed","coords","console","log","toFixed","isInIndia","Math","round","data","success","map","station","name","vicinity","address","place_id","id","brand","distance","fuelTypes","openingHours","googleMapsUrl","googleMapsDirectionsUrl","coordinates","geometry","location","provider","results","elements","e","lon","err","code","searchManualLocation","parseFloat","selectStation","placeId","formatted_address","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","step","placeholder","value","onChange","target","role","includes","style","whiteSpace","margin","fontFamily","href","rel","length","slice","index","title","stopPropagation","join","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/StationSearch.js"],"sourcesContent":["// frontend/src/components/StationSearch.js\r\nimport React, { useState } from 'react';\r\nimport { findStations } from '../services/api';\r\n\r\nexport default function StationSearch({ onStationSelect }) {\r\n  const [stations, setStations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [manualLocation, setManualLocation] = useState({ lat: '', lng: '' });\r\n  const [showManualInput, setShowManualInput] = useState(false);\r\n  const [lastDetectedLocation, setLastDetectedLocation] = useState(null);\r\n\r\n  async function searchNearby() {\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by this browser. Please enable location services.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setStations([]);\r\n\r\n    try {\r\n      // Request location with high accuracy\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          resolve, \r\n          reject, \r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 25000,\r\n            maximumAge: 30000 // 30 seconds cache - fresher location data\r\n          }\r\n        );\r\n      });\r\n\r\n      const { latitude, longitude, accuracy, altitude, heading, speed } = position.coords;\r\n      \r\n      console.log(`Location detected: ${latitude.toFixed(6)}, ${longitude.toFixed(6)} (accuracy: ${accuracy}m)`);\r\n      console.log(`Additional info: altitude: ${altitude}m, heading: ${heading}°, speed: ${speed}m/s`);\r\n      \r\n      // Check if coordinates are reasonable for India\r\n      const isInIndia = latitude >= 6.0 && latitude <= 37.0 && longitude >= 68.0 && longitude <= 97.0;\r\n      if (!isInIndia) {\r\n        setError(`🌍 Location seems incorrect (${latitude.toFixed(4)}, ${longitude.toFixed(4)}). This doesn't appear to be in India. Please check your location settings.`);\r\n        return;\r\n      }\r\n      \r\n      // Warn if location accuracy is poor\r\n      if (accuracy > 1000) {\r\n        setError(`⚠️ Location accuracy is low (${Math.round(accuracy)}m). Results may not be precise. Try moving to an open area for better GPS signal.`);\r\n      } else if (accuracy > 100) {\r\n        setError(`📍 Location accuracy is moderate (${Math.round(accuracy)}m). For best results, ensure you're outdoors with clear sky view.`);\r\n      }\r\n      \r\n      // Store detected location\r\n      setLastDetectedLocation({ lat: latitude, lng: longitude, accuracy });\r\n      \r\n      // Show detected location to user for verification\r\n      setError(`📍 Location detected: ${latitude.toFixed(4)}, ${longitude.toFixed(4)} (±${Math.round(accuracy)}m)\\n\\n🔍 Please verify this is your current location. If not, use the Manual option below.`);\r\n      \r\n      const data = await findStations(latitude, longitude);\r\n      \r\n      if (data.success && data.stations) {\r\n        // New unified format\r\n        setStations(data.stations.map(station => ({\r\n          name: station.name,\r\n          vicinity: station.address,\r\n          place_id: station.id,\r\n          brand: station.brand,\r\n          distance: station.distance,\r\n          fuelTypes: station.fuelTypes,\r\n          openingHours: station.openingHours,\r\n          googleMapsUrl: station.googleMapsUrl,\r\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\r\n          coordinates: station.coordinates,\r\n          geometry: { location: { lat: station.lat, lng: station.lng } }\r\n        })));\r\n      } else if (data.provider === 'google' && data.data && data.data.results) {\r\n        // Legacy Google format\r\n        setStations(data.data.results);\r\n      } else if (data.provider === 'osm' && data.data && data.data.elements) {\r\n        // Legacy OSM format\r\n        setStations(data.data.elements.map(e => ({\r\n          name: e.name || 'Unknown Station',\r\n          vicinity: e.address || 'Unknown Address',\r\n          place_id: e.id,\r\n          brand: e.brand,\r\n          distance: e.distance,\r\n          geometry: { location: { lat: e.lat, lng: e.lon } }\r\n        })));\r\n      } else {\r\n        setStations([]);\r\n        setError('No stations found in your area. Try expanding your search or check your location.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Station search error:', err);\r\n      \r\n      if (err.code === 1) {\r\n        setError('❌ Location access denied. Please:\\n1. Click the location icon in your browser\\n2. Select \"Allow\" for location access\\n3. Try searching again');\r\n      } else if (err.code === 2) {\r\n        setError('📍 Location unavailable. Please check:\\n1. GPS is enabled on your device\\n2. You have internet connection\\n3. Try again in a few moments');\r\n      } else if (err.code === 3) {\r\n        setError('⏱️ Location request timed out. This might be due to:\\n1. Weak GPS signal\\n2. Try moving to an open area\\n3. Refresh and try again');\r\n      } else {\r\n        setError('⚠️ Failed to find stations. Please:\\n1. Check your internet connection\\n2. Ensure location services are enabled\\n3. Try again or add stations manually');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function searchManualLocation() {\r\n    if (!manualLocation.lat || !manualLocation.lng) {\r\n      setError('Please enter both latitude and longitude');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setStations([]);\r\n\r\n    try {\r\n      const data = await findStations(parseFloat(manualLocation.lat), parseFloat(manualLocation.lng));\r\n      \r\n      if (data.success && data.stations) {\r\n        setStations(data.stations.map(station => ({\r\n          name: station.name,\r\n          vicinity: station.address,\r\n          place_id: station.id,\r\n          brand: station.brand,\r\n          distance: station.distance,\r\n          fuelTypes: station.fuelTypes,\r\n          openingHours: station.openingHours,\r\n          googleMapsUrl: station.googleMapsUrl,\r\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\r\n          coordinates: station.coordinates,\r\n          geometry: { location: { lat: station.lat, lng: station.lng } }\r\n        })));\r\n      } else {\r\n        setStations([]);\r\n        setError('No stations found at the specified location.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Manual search error:', err);\r\n      setError('Failed to search at the specified location. Please check coordinates and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function selectStation(station) {\r\n    if (onStationSelect) {\r\n      onStationSelect({\r\n        name: station.name,\r\n        placeId: station.place_id,\r\n        address: station.vicinity || station.formatted_address,\r\n        brand: station.brand,\r\n        distance: station.distance\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5>Find Nearby Gas Stations</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex gap-2 mb-3\">\r\n          <button \r\n            className=\"btn btn-primary flex-fill\" \r\n            onClick={searchNearby}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <span className=\"loading-spinner me-2\"></span>\r\n                Searching...\r\n              </>\r\n            ) : (\r\n              <>📍 Use My Location</>\r\n            )}\r\n          </button>\r\n          <button \r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => setShowManualInput(!showManualInput)}\r\n          >\r\n            📝 Manual\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"mb-3\">\r\n          <small className=\"text-muted\">\r\n            💡 <strong>For Mysore</strong>: Lat ~12.2958, Lng ~76.6394<br/>\r\n            💡 <strong>For Bangalore</strong>: Lat ~12.9716, Lng ~77.5946<br/>\r\n            💡 If GPS shows wrong city, use Manual option above\r\n          </small>\r\n        </div>\r\n\r\n        {showManualInput && (\r\n          <div className=\"mb-3 p-3 bg-light rounded\">\r\n            <h6>Enter Location Manually</h6>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  className=\"form-control form-control-sm\"\r\n                  placeholder=\"Latitude\"\r\n                  value={manualLocation.lat}\r\n                  onChange={(e) => setManualLocation({...manualLocation, lat: e.target.value})}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  className=\"form-control form-control-sm\"\r\n                  placeholder=\"Longitude\"\r\n                  value={manualLocation.lng}\r\n                  onChange={(e) => setManualLocation({...manualLocation, lng: e.target.value})}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button \r\n              className=\"btn btn-sm btn-success mt-2 w-100\"\r\n              onClick={searchManualLocation}\r\n              disabled={loading}\r\n            >\r\n              Search This Location\r\n            </button>\r\n            <div className=\"mt-2\">\r\n              <small className=\"text-muted d-block mb-2\">\r\n                💡 You can get coordinates from Google Maps by right-clicking on a location\r\n              </small>\r\n              <div className=\"btn-group btn-group-sm w-100\" role=\"group\">\r\n                <button \r\n                  className=\"btn btn-outline-info\"\r\n                  onClick={() => setManualLocation({lat: '12.2958', lng: '76.6394'})}\r\n                >\r\n                  📍 Mysore\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-outline-info\"\r\n                  onClick={() => setManualLocation({lat: '12.9716', lng: '77.5946'})}\r\n                >\r\n                  📍 Bangalore\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-outline-info\"\r\n                  onClick={() => setManualLocation({lat: '13.0827', lng: '80.2707'})}\r\n                >\r\n                  📍 Chennai\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className={`alert ${error.includes('📍 Location detected') ? 'alert-info' : 'alert-danger'}`} role=\"alert\">\r\n            <pre style={{whiteSpace: 'pre-wrap', margin: 0, fontFamily: 'inherit'}}>{error}</pre>\r\n            {lastDetectedLocation && error.includes('📍 Location detected') && (\r\n              <div className=\"mt-2\">\r\n                <a\r\n                  href={`https://www.google.com/maps?q=${lastDetectedLocation.lat},${lastDetectedLocation.lng}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"btn btn-sm btn-outline-primary me-2\"\r\n                >\r\n                  🗺️ Verify on Google Maps\r\n                </a>\r\n                <button\r\n                  className=\"btn btn-sm btn-outline-secondary\"\r\n                  onClick={() => {\r\n                    setManualLocation({\r\n                      lat: lastDetectedLocation.lat.toFixed(6),\r\n                      lng: lastDetectedLocation.lng.toFixed(6)\r\n                    });\r\n                    setShowManualInput(true);\r\n                  }}\r\n                >\r\n                  📝 Edit Coordinates\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {stations.length > 0 && (\r\n          <div>\r\n            <h6>⛽ Found {stations.length} Nearby Stations:</h6>\r\n            <small className=\"text-muted mb-2 d-block\">\r\n              📍 Showing stations within 3km of your location. \r\n              {lastDetectedLocation && (\r\n                <span className=\"text-info\">\r\n                  {' '}(GPS accuracy: ±{Math.round(lastDetectedLocation.accuracy)}m)\r\n                </span>\r\n              )}\r\n              <br/>Click \"View\" to verify on Google Maps.\r\n            </small>\r\n            <div className=\"list-group\">\r\n              {stations.slice(0, 10).map((station, index) => (\r\n                <div\r\n                  key={station.place_id || index}\r\n                  className=\"list-group-item\"\r\n                >\r\n                  <div className=\"d-flex w-100 justify-content-between align-items-start\">\r\n                    <div className=\"flex-grow-1\">\r\n                      <h6 className=\"mb-1\">\r\n                        {station.name}\r\n                        {station.brand && station.brand !== station.name && (\r\n                          <small className=\"text-muted\"> ({station.brand})</small>\r\n                        )}\r\n                      </h6>\r\n                      {station.distance && (\r\n                        <small className=\"text-primary\">📏 {station.distance}m away</small>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"btn-group btn-group-sm\">\r\n                      {station.googleMapsUrl && (\r\n                        <a\r\n                          href={station.googleMapsUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-outline-primary btn-sm\"\r\n                          title=\"View on Google Maps\"\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                          🗺️ View\r\n                        </a>\r\n                      )}\r\n                      {station.googleMapsDirectionsUrl && (\r\n                        <a\r\n                          href={station.googleMapsDirectionsUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-outline-success btn-sm\"\r\n                          title=\"Get Directions\"\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                          🧭 Directions\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <p className=\"mb-2 text-muted\">\r\n                    📍 {station.vicinity || station.formatted_address || 'Address not available'}\r\n                  </p>\r\n                  \r\n                  {station.coordinates && (\r\n                    <p className=\"mb-1\">\r\n                      <small className=\"text-secondary\">📌 {station.coordinates}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {station.fuelTypes && (\r\n                    <p className=\"mb-1\">\r\n                      <small className=\"text-info\">⛽ {station.fuelTypes.join(', ')}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {station.openingHours && station.openingHours !== 'Unknown' && (\r\n                    <p className=\"mb-2\">\r\n                      <small className=\"text-warning\">🕒 {station.openingHours}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  <button\r\n                    className=\"btn btn-success btn-sm w-100\"\r\n                    onClick={() => selectStation(station)}\r\n                  >\r\n                    ✨ Use This Station\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <small className=\"text-muted\">\r\n                💡 Click on any station to auto-fill it in your fuel entry form\r\n              </small>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}