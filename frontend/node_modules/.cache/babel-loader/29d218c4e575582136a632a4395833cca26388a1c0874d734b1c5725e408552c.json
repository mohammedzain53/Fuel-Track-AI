{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport { chatbotMessage } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi! I\\'m your AI Fuel Assistant 🤖\\n\\nI can help you with:\\n• Finding nearby gas stations 🗺️\\n• Analyzing your fuel expenses 📊\\n• Tracking fuel efficiency 📈\\n• Price comparisons 💰\\n\\nWhat would you like to know?'\n  }]);\n  const [input, setInput] = useState('');\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [quickActions] = useState([{\n    text: 'Find stations near me',\n    icon: '🗺️'\n  }, {\n    text: 'Monthly expenses',\n    icon: '📊'\n  }, {\n    text: 'Average fuel price',\n    icon: '💰'\n  }, {\n    text: 'Last fill-up details',\n    icon: '⛽'\n  }]);\n  async function send(message = null) {\n    const messageText = message || input;\n    if (!messageText.trim()) return;\n    const userMsg = {\n      from: 'user',\n      text: messageText\n    };\n    setMessages(m => [...m, userMsg]);\n\n    // Show typing indicator\n    setMessages(m => [...m, {\n      from: 'bot',\n      text: '🤖 Typing...',\n      isTyping: true\n    }]);\n\n    // try to get location if message asks for 'near' or 'nearby'\n    let pos = null;\n    if (/(near|nearby|around|close|find.*station|find.*pump)/i.test(messageText)) {\n      try {\n        pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => {\n            console.log('Location error:', err);\n            resolve(null);\n          }, {\n            timeout: 10000,\n            enableHighAccuracy: true\n          });\n        });\n      } catch (e) {\n        console.log('Location exception:', e);\n        pos = null;\n      }\n    }\n    try {\n      var _pos, _pos2;\n      const payload = {\n        text: messageText,\n        lat: (_pos = pos) === null || _pos === void 0 ? void 0 : _pos.latitude,\n        lng: (_pos2 = pos) === null || _pos2 === void 0 ? void 0 : _pos2.longitude\n      };\n      const res = await chatbotMessage(payload);\n\n      // Remove typing indicator\n      setMessages(m => m.filter(msg => !msg.isTyping));\n      const botReply = res.reply || formatStationResponse(res) || \"I couldn't understand that. Try asking 'help' to see what I can do!\";\n      setMessages(m => [...m, {\n        from: 'bot',\n        text: botReply\n      }]);\n    } catch (error) {\n      // Remove typing indicator\n      setMessages(m => m.filter(msg => !msg.isTyping));\n      setMessages(m => [...m, {\n        from: 'bot',\n        text: '⚠️ Sorry, I encountered an error. Please try again or check your internet connection.'\n      }]);\n    }\n    if (!message) setInput('');\n  }\n  function handleQuickAction(actionText) {\n    send(actionText);\n  }\n  function clearChat() {\n    setMessages([{\n      from: 'bot',\n      text: 'Chat cleared! How can I help you today? 😊'\n    }]);\n  }\n  function formatStationResponse(res) {\n    // Handle the new station response format\n    if (res.hasStations && res.stations) {\n      return res.reply; // The backend now formats the response\n    }\n\n    // Fallback for direct API responses\n    if (res.success && res.stations) {\n      const stationList = res.stations.slice(0, 5).map((station, index) => `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`).join('\\n\\n');\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\n    }\n\n    // Legacy format support\n    if (res.data && res.data.results) {\n      return res.data.results.slice(0, 5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\n    }\n    if (res.data && res.data.elements) {\n      return res.data.elements.slice(0, 5).map(e => `${e.name || 'Unknown'} — ${e.address || ''}`).join('\\n');\n    }\n    return res.reply || \"I couldn't find any stations nearby.\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${isMinimized ? 'minimized' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0 gradient-text\",\n            children: \"AI Fuel Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"Online \\u2022 Ready to help\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-light me-2\",\n          onClick: clearChat,\n          title: \"Clear chat\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-light\",\n          onClick: () => setIsMinimized(!isMinimized),\n          title: isMinimized ? 'Expand' : 'Minimize',\n          children: isMinimized ? '⬆️' : '⬇️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${m.from}`,\n            children: [m.from === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  margin: 0,\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: 'inherit'\n                },\n                children: m.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"message-time\",\n                children: new Date().toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), m.from === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar user-avatar\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted mb-2 d-block\",\n          children: \"Quick Actions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-wrap gap-2\",\n          children: quickActions.map((action, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-outline-primary quick-action-btn\",\n            onClick: () => handleQuickAction(action.text),\n            children: [action.icon, \" \", action.text]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && send(),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => send(),\n            disabled: !input.trim(),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-none d-sm-inline\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-sm-none\",\n              children: \"\\uD83D\\uDCE4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"\\uD83D\\uDCA1 Try: \\\"find stations\\\", \\\"monthly expenses\\\", \\\"average price\\\", or \\\"help\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"OBBzGEnpEkuqBYm8ak66Carib1o=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","chatbotMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","from","text","input","setInput","isMinimized","setIsMinimized","quickActions","icon","send","message","messageText","trim","userMsg","m","isTyping","pos","test","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","p","coords","err","console","log","timeout","enableHighAccuracy","e","_pos","_pos2","payload","lat","latitude","lng","longitude","res","filter","msg","botReply","reply","formatStationResponse","error","handleQuickAction","actionText","clearChat","hasStations","stations","success","stationList","slice","map","station","index","name","address","distance","join","length","data","results","s","vicinity","formatted_address","elements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","i","style","margin","whiteSpace","fontFamily","Date","toLocaleTimeString","hour","minute","action","value","onChange","target","onKeyPress","key","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/Chatbot.js"],"sourcesContent":["// frontend/src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport { chatbotMessage } from '../services/api';\r\n\r\nexport default function Chatbot(){\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi! I\\'m your AI Fuel Assistant 🤖\\n\\nI can help you with:\\n• Finding nearby gas stations 🗺️\\n• Analyzing your fuel expenses 📊\\n• Tracking fuel efficiency 📈\\n• Price comparisons 💰\\n\\nWhat would you like to know?' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [quickActions] = useState([\r\n    { text: 'Find stations near me', icon: '🗺️' },\r\n    { text: 'Monthly expenses', icon: '📊' },\r\n    { text: 'Average fuel price', icon: '💰' },\r\n    { text: 'Last fill-up details', icon: '⛽' }\r\n  ]);\r\n\r\n  async function send(message = null){\r\n    const messageText = message || input;\r\n    if(!messageText.trim()) return;\r\n    \r\n    const userMsg = { from:'user', text: messageText };\r\n    setMessages(m=>[...m, userMsg]);\r\n    \r\n    // Show typing indicator\r\n    setMessages(m=>[...m, { from:'bot', text: '🤖 Typing...', isTyping: true }]);\r\n    \r\n    // try to get location if message asks for 'near' or 'nearby'\r\n    let pos = null;\r\n    if (/(near|nearby|around|close|find.*station|find.*pump)/i.test(messageText)) {\r\n      try {\r\n        pos = await new Promise((resolve, reject) => {\r\n          navigator.geolocation.getCurrentPosition(\r\n            p => resolve(p.coords), \r\n            err => {\r\n              console.log('Location error:', err);\r\n              resolve(null);\r\n            },\r\n            { timeout: 10000, enableHighAccuracy: true }\r\n          );\r\n        });\r\n      } catch(e){ \r\n        console.log('Location exception:', e);\r\n        pos = null; \r\n      }\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        text: messageText,\r\n        lat: pos?.latitude,\r\n        lng: pos?.longitude\r\n      };\r\n\r\n      const res = await chatbotMessage(payload);\r\n      \r\n      // Remove typing indicator\r\n      setMessages(m => m.filter(msg => !msg.isTyping));\r\n      \r\n      const botReply = res.reply || formatStationResponse(res) || \"I couldn't understand that. Try asking 'help' to see what I can do!\";\r\n      setMessages(m=>[...m, { from:'bot', text: botReply }]);\r\n    } catch (error) {\r\n      // Remove typing indicator\r\n      setMessages(m => m.filter(msg => !msg.isTyping));\r\n      \r\n      setMessages(m=>[...m, { \r\n        from:'bot', \r\n        text: '⚠️ Sorry, I encountered an error. Please try again or check your internet connection.' \r\n      }]);\r\n    }\r\n    \r\n    if (!message) setInput('');\r\n  }\r\n\r\n  function handleQuickAction(actionText) {\r\n    send(actionText);\r\n  }\r\n\r\n  function clearChat() {\r\n    setMessages([\r\n      { from: 'bot', text: 'Chat cleared! How can I help you today? 😊' }\r\n    ]);\r\n  }\r\n\r\n  function formatStationResponse(res){\r\n    // Handle the new station response format\r\n    if (res.hasStations && res.stations) {\r\n      return res.reply; // The backend now formats the response\r\n    }\r\n    \r\n    // Fallback for direct API responses\r\n    if (res.success && res.stations) {\r\n      const stationList = res.stations.slice(0, 5).map((station, index) => \r\n        `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`\r\n      ).join('\\n\\n');\r\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\r\n    }\r\n    \r\n    // Legacy format support\r\n    if (res.data && res.data.results) {\r\n      return res.data.results.slice(0,5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\r\n    }\r\n    if (res.data && res.data.elements) {\r\n      return res.data.elements.slice(0,5).map(e => `${e.name || 'Unknown'} — ${e.address || ''}`).join('\\n');\r\n    }\r\n    \r\n    return res.reply || \"I couldn't find any stations nearby.\";\r\n  }\r\n\r\n  return (\r\n    <div className={`chatbot-container ${isMinimized ? 'minimized' : ''}`}>\r\n      {/* Chatbot Header */}\r\n      <div className=\"chatbot-header\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"chatbot-avatar\">\r\n            <span>🤖</span>\r\n          </div>\r\n          <div className=\"ms-3\">\r\n            <h5 className=\"mb-0 gradient-text\">AI Fuel Assistant</h5>\r\n            <small className=\"text-muted\">Online • Ready to help</small>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatbot-controls\">\r\n          <button \r\n            className=\"btn btn-sm btn-outline-light me-2\" \r\n            onClick={clearChat}\r\n            title=\"Clear chat\"\r\n          >\r\n            🗑️\r\n          </button>\r\n          <button \r\n            className=\"btn btn-sm btn-outline-light\" \r\n            onClick={() => setIsMinimized(!isMinimized)}\r\n            title={isMinimized ? 'Expand' : 'Minimize'}\r\n          >\r\n            {isMinimized ? '⬆️' : '⬇️'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Messages */}\r\n      {!isMinimized && (\r\n        <>\r\n          <div className=\"chatbot-messages\">\r\n            <div className=\"d-flex flex-column\">\r\n              {messages.map((m,i)=>(\r\n                <div key={i} className={`chat-message ${m.from}`}>\r\n                  {m.from === 'bot' && (\r\n                    <div className=\"message-avatar\">🤖</div>\r\n                  )}\r\n                  <div className=\"message-content\">\r\n                    <pre style={{margin:0,whiteSpace:'pre-wrap', fontFamily:'inherit'}}>{m.text}</pre>\r\n                    <small className=\"message-time\">\r\n                      {new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\r\n                    </small>\r\n                  </div>\r\n                  {m.from === 'user' && (\r\n                    <div className=\"message-avatar user-avatar\">👤</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"quick-actions\">\r\n            <small className=\"text-muted mb-2 d-block\">Quick Actions:</small>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              {quickActions.map((action, i) => (\r\n                <button\r\n                  key={i}\r\n                  className=\"btn btn-sm btn-outline-primary quick-action-btn\"\r\n                  onClick={() => handleQuickAction(action.text)}\r\n                >\r\n                  {action.icon} {action.text}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Input Area */}\r\n          <div className=\"chatbot-input\">\r\n            <div className=\"input-group\">\r\n              <input \r\n                className=\"form-control\" \r\n                value={input} \r\n                onChange={e=>setInput(e.target.value)}\r\n                onKeyPress={e => e.key === 'Enter' && send()}\r\n                placeholder=\"Type your message...\" \r\n              />\r\n              <button \r\n                className=\"btn btn-primary\" \r\n                onClick={() => send()} \r\n                disabled={!input.trim()}\r\n              >\r\n                <span className=\"d-none d-sm-inline\">Send</span>\r\n                <span className=\"d-sm-none\">📤</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <small className=\"text-muted\">\r\n                💡 Try: \"find stations\", \"monthly expenses\", \"average price\", or \"help\"\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}