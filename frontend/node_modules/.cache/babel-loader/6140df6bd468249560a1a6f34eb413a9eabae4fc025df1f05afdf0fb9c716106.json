{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport { chatbotMessage } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi! Ask me to find gas stations nearby or ask about your fuel expenses.'\n  }]);\n  const [input, setInput] = useState('');\n  async function send() {\n    var _pos, _pos2;\n    if (!input) return;\n    const userMsg = {\n      from: 'user',\n      text: input\n    };\n    setMessages(m => [...m, userMsg]);\n    // try to get location if message asks for 'near' or 'nearby'\n    let pos = null;\n    if (/(near|nearby|around|close)/i.test(input)) {\n      try {\n        pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => resolve(null));\n        });\n      } catch (e) {\n        pos = null;\n      }\n    }\n    const payload = {\n      text: input,\n      lat: (_pos = pos) === null || _pos === void 0 ? void 0 : _pos.latitude,\n      lng: (_pos2 = pos) === null || _pos2 === void 0 ? void 0 : _pos2.longitude\n    };\n    const res = await chatbotMessage(payload);\n    const botReply = res.reply || (res.data ? formatStationResponse(res) : \"I couldn't find anything.\");\n    setMessages(m => [...m, {\n      from: 'bot',\n      text: botReply\n    }]);\n    setInput('');\n  }\n  function formatStationResponse(res) {\n    // if provider returned stations list (Google Places)\n    const provider = res.provider || '';\n    if (res.data && res.data.results) {\n      return res.data.results.slice(0, 5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\n    }\n    if (res.data && res.data.elements) {\n      // OSM Overpass\n      return res.data.elements.slice(0, 5).map(e => {\n        var _e$tags, _e$tags2;\n        return `${((_e$tags = e.tags) === null || _e$tags === void 0 ? void 0 : _e$tags.name) || 'Unknown'} — ${((_e$tags2 = e.tags) === null || _e$tags2 === void 0 ? void 0 : _e$tags2['addr:street']) || ''}`;\n      }).join('\\n');\n    }\n    return JSON.stringify(res).slice(0, 300);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 250,\n        overflow: 'auto'\n      },\n      className: \"mb-2\",\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: m.from === 'bot' ? 'text-left' : 'text-right',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 mb-1 d-inline-block ${m.from === 'bot' ? 'bg-light' : 'bg-primary text-white'}`,\n          style: {\n            borderRadius: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              margin: 0,\n              whiteSpace: 'pre-wrap'\n            },\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control me-2\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask: find gas stations near me...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: send,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"2D/4wYQ8YY4FZz3Sx4Cs9uJ1Rek=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","chatbotMessage","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","from","text","input","setInput","send","_pos","_pos2","userMsg","m","pos","test","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","p","coords","err","e","payload","lat","latitude","lng","longitude","res","botReply","reply","data","formatStationResponse","provider","results","slice","map","s","name","vicinity","formatted_address","join","elements","_e$tags","_e$tags2","tags","JSON","stringify","className","children","style","height","overflow","i","borderRadius","margin","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/Chatbot.js"],"sourcesContent":["// frontend/src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport { chatbotMessage } from '../services/api';\r\n\r\nexport default function Chatbot(){\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi! Ask me to find gas stations nearby or ask about your fuel expenses.' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  async function send(){\r\n    if(!input) return;\r\n    const userMsg = { from:'user', text: input };\r\n    setMessages(m=>[...m, userMsg]);\r\n    // try to get location if message asks for 'near' or 'nearby'\r\n    let pos = null;\r\n    if (/(near|nearby|around|close)/i.test(input)) {\r\n      try {\r\n        pos = await new Promise((resolve, reject) => {\r\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => resolve(null));\r\n        });\r\n      } catch(e){ pos = null; }\r\n    }\r\n\r\n    const payload = {\r\n      text: input,\r\n      lat: pos?.latitude,\r\n      lng: pos?.longitude\r\n    };\r\n\r\n    const res = await chatbotMessage(payload);\r\n    const botReply = res.reply || (res.data ? formatStationResponse(res) : \"I couldn't find anything.\");\r\n    setMessages(m=>[...m, { from:'bot', text: botReply }]);\r\n    setInput('');\r\n  }\r\n\r\n  function formatStationResponse(res){\r\n    // if provider returned stations list (Google Places)\r\n    const provider = res.provider || '';\r\n    if (res.data && res.data.results) {\r\n      return res.data.results.slice(0,5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\r\n    }\r\n    if (res.data && res.data.elements) { // OSM Overpass\r\n      return res.data.elements.slice(0,5).map(e => `${e.tags?.name || 'Unknown'} — ${e.tags?.['addr:street'] || ''}`).join('\\n');\r\n    }\r\n    return JSON.stringify(res).slice(0,300);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-3\">\r\n      <div style={{height:250, overflow:'auto'}} className=\"mb-2\">\r\n        {messages.map((m,i)=>(\r\n          <div key={i} className={m.from==='bot' ? 'text-left' : 'text-right'}>\r\n            <div className={`p-2 mb-1 d-inline-block ${m.from==='bot' ? 'bg-light' : 'bg-primary text-white'}`} style={{borderRadius:8}}>\r\n              <pre style={{margin:0,whiteSpace:'pre-wrap'}}>{m.text}</pre>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"d-flex\">\r\n        <input className=\"form-control me-2\" value={input} onChange={e=>setInput(e.target.value)} placeholder=\"Ask: find gas stations near me...\" />\r\n        <button className=\"btn btn-primary\" onClick={send}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}