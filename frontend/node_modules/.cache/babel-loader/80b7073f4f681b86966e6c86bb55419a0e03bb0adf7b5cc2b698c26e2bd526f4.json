{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\FloatingChatbot.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/FloatingChatbot.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { chatbotMessage } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FloatingChatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi! 👋 I\\'m your AI Fuel Assistant!\\n\\nI can help you with:\\n• Finding nearby gas stations 🗺️\\n• Analyzing fuel expenses 📊\\n• Tracking efficiency 📈\\n• Price comparisons 💰\\n\\nWhat would you like to know?',\n    timestamp: new Date()\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const quickActions = [{\n    text: 'Find stations near me',\n    icon: '🗺️',\n    color: 'primary'\n  }, {\n    text: 'Monthly expenses',\n    icon: '📊',\n    color: 'success'\n  }, {\n    text: 'Average fuel price',\n    icon: '💰',\n    color: 'warning'\n  }, {\n    text: 'Help me',\n    icon: '❓',\n    color: 'info'\n  }];\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSend = async (message = null) => {\n    const messageText = message || input;\n    if (!messageText.trim()) return;\n    const userMsg = {\n      from: 'user',\n      text: messageText,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setInput('');\n    setIsTyping(true);\n\n    // Get location for nearby queries\n    let pos = null;\n    if (/(near|nearby|around|close|find.*station|find.*pump)/i.test(messageText)) {\n      try {\n        pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => {\n            console.log('Location error:', err);\n            resolve(null);\n          }, {\n            timeout: 10000,\n            enableHighAccuracy: true\n          });\n        });\n      } catch (e) {\n        console.log('Location exception:', e);\n        pos = null;\n      }\n    }\n    try {\n      var _pos, _pos2;\n      const payload = {\n        text: messageText,\n        lat: (_pos = pos) === null || _pos === void 0 ? void 0 : _pos.latitude,\n        lng: (_pos2 = pos) === null || _pos2 === void 0 ? void 0 : _pos2.longitude\n      };\n      const res = await chatbotMessage(payload);\n      setIsTyping(false);\n      const botReply = res.reply || formatStationResponse(res) || \"I couldn't understand that. Try asking 'help' to see what I can do!\";\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: botReply,\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      setIsTyping(false);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '⚠️ Sorry, I encountered an error. Please try again or check your internet connection.',\n        timestamp: new Date()\n      }]);\n    }\n  };\n  const formatStationResponse = res => {\n    if (res.hasStations && res.stations) {\n      return res.reply;\n    }\n    if (res.success && res.stations) {\n      const stationList = res.stations.slice(0, 5).map((station, index) => `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`).join('\\n\\n');\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\n    }\n    if (res.data && res.data.results) {\n      return res.data.results.slice(0, 5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\n    }\n    return res.reply || \"I couldn't find any stations nearby.\";\n  };\n  const clearChat = () => {\n    setMessages([{\n      from: 'bot',\n      text: 'Chat cleared! How can I help you today? 😊',\n      timestamp: new Date()\n    }]);\n  };\n  const formatTime = timestamp => {\n    return timestamp.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `floating-chat-button ${isOpen ? 'open' : ''}`,\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-button-icon\",\n        children: isOpen ? '✕' : '🤖'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-button-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-button-text\",\n        children: isOpen ? 'Close' : 'AI Assistant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `floating-chat-window ${isMinimized ? 'minimized' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"AI Fuel Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), \"Online\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-control-btn\",\n            onClick: () => setIsMinimized(!isMinimized),\n            title: isMinimized ? 'Expand' : 'Minimize',\n            children: isMinimized ? '⬆️' : '⬇️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-control-btn\",\n            onClick: clearChat,\n            title: \"Clear chat\",\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-chat-messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `floating-message ${msg.from}`,\n            children: [msg.from === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar bot\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: msg.text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: line\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-time\",\n                children: formatTime(msg.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), msg.from === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar user\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"floating-message bot\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar bot\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble typing\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-quick-actions\",\n          children: quickActions.map((action, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `quick-action-btn ${action.color}`,\n            onClick: () => handleSend(action.text),\n            children: action.icon\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-chat-input\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && handleSend(),\n              placeholder: \"Ask me anything...\",\n              className: \"chat-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSend(),\n              disabled: !input.trim() || isTyping,\n              className: \"chat-send-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"send-icon\",\n                children: \"\\uD83D\\uDE80\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(FloatingChatbot, \"SsIv6SG8xPkcW8l8C9dbev4H74A=\");\n_c = FloatingChatbot;\nvar _c;\n$RefreshReg$(_c, \"FloatingChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chatbotMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","FloatingChatbot","_s","isOpen","setIsOpen","isMinimized","setIsMinimized","messages","setMessages","from","text","timestamp","Date","input","setInput","isTyping","setIsTyping","messagesEndRef","quickActions","icon","color","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","message","messageText","trim","userMsg","prev","pos","test","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","p","coords","err","console","log","timeout","enableHighAccuracy","e","_pos","_pos2","payload","lat","latitude","lng","longitude","res","botReply","reply","formatStationResponse","error","hasStations","stations","success","stationList","slice","map","station","index","name","address","distance","join","length","data","results","s","vicinity","formatted_address","clearChat","formatTime","toLocaleTimeString","hour","minute","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","msg","split","line","i","ref","action","type","value","onChange","target","onKeyPress","key","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/FloatingChatbot.js"],"sourcesContent":["// frontend/src/components/FloatingChatbot.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { chatbotMessage } from '../services/api';\r\n\r\nexport default function FloatingChatbot() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { \r\n      from: 'bot', \r\n      text: 'Hi! 👋 I\\'m your AI Fuel Assistant!\\n\\nI can help you with:\\n• Finding nearby gas stations 🗺️\\n• Analyzing fuel expenses 📊\\n• Tracking efficiency 📈\\n• Price comparisons 💰\\n\\nWhat would you like to know?',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const quickActions = [\r\n    { text: 'Find stations near me', icon: '🗺️', color: 'primary' },\r\n    { text: 'Monthly expenses', icon: '📊', color: 'success' },\r\n    { text: 'Average fuel price', icon: '💰', color: 'warning' },\r\n    { text: 'Help me', icon: '❓', color: 'info' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSend = async (message = null) => {\r\n    const messageText = message || input;\r\n    if (!messageText.trim()) return;\r\n\r\n    const userMsg = { \r\n      from: 'user', \r\n      text: messageText,\r\n      timestamp: new Date()\r\n    };\r\n    setMessages(prev => [...prev, userMsg]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    // Get location for nearby queries\r\n    let pos = null;\r\n    if (/(near|nearby|around|close|find.*station|find.*pump)/i.test(messageText)) {\r\n      try {\r\n        pos = await new Promise((resolve, reject) => {\r\n          navigator.geolocation.getCurrentPosition(\r\n            p => resolve(p.coords),\r\n            err => {\r\n              console.log('Location error:', err);\r\n              resolve(null);\r\n            },\r\n            { timeout: 10000, enableHighAccuracy: true }\r\n          );\r\n        });\r\n      } catch (e) {\r\n        console.log('Location exception:', e);\r\n        pos = null;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        text: messageText,\r\n        lat: pos?.latitude,\r\n        lng: pos?.longitude\r\n      };\r\n\r\n      const res = await chatbotMessage(payload);\r\n      \r\n      setIsTyping(false);\r\n      \r\n      const botReply = res.reply || formatStationResponse(res) || \"I couldn't understand that. Try asking 'help' to see what I can do!\";\r\n      setMessages(prev => [...prev, { \r\n        from: 'bot', \r\n        text: botReply,\r\n        timestamp: new Date()\r\n      }]);\r\n    } catch (error) {\r\n      setIsTyping(false);\r\n      setMessages(prev => [...prev, { \r\n        from: 'bot', \r\n        text: '⚠️ Sorry, I encountered an error. Please try again or check your internet connection.',\r\n        timestamp: new Date()\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const formatStationResponse = (res) => {\r\n    if (res.hasStations && res.stations) {\r\n      return res.reply;\r\n    }\r\n    \r\n    if (res.success && res.stations) {\r\n      const stationList = res.stations.slice(0, 5).map((station, index) => \r\n        `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`\r\n      ).join('\\n\\n');\r\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\r\n    }\r\n    \r\n    if (res.data && res.data.results) {\r\n      return res.data.results.slice(0,5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\r\n    }\r\n    \r\n    return res.reply || \"I couldn't find any stations nearby.\";\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setMessages([\r\n      { \r\n        from: 'bot', \r\n        text: 'Chat cleared! How can I help you today? 😊',\r\n        timestamp: new Date()\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Floating Chat Button */}\r\n      <div \r\n        className={`floating-chat-button ${isOpen ? 'open' : ''}`}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <div className=\"chat-button-icon\">\r\n          {isOpen ? '✕' : '🤖'}\r\n        </div>\r\n        <div className=\"chat-button-pulse\"></div>\r\n        <div className=\"chat-button-text\">\r\n          {isOpen ? 'Close' : 'AI Assistant'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Floating Chat Window */}\r\n      {isOpen && (\r\n        <div className={`floating-chat-window ${isMinimized ? 'minimized' : ''}`}>\r\n          {/* Chat Header */}\r\n          <div className=\"floating-chat-header\">\r\n            <div className=\"chat-header-info\">\r\n              <div className=\"chat-avatar\">🤖</div>\r\n              <div className=\"chat-header-text\">\r\n                <h6>AI Fuel Assistant</h6>\r\n                <span className=\"chat-status\">\r\n                  <span className=\"status-dot\"></span>\r\n                  Online\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"chat-header-controls\">\r\n              <button \r\n                className=\"chat-control-btn\"\r\n                onClick={() => setIsMinimized(!isMinimized)}\r\n                title={isMinimized ? 'Expand' : 'Minimize'}\r\n              >\r\n                {isMinimized ? '⬆️' : '⬇️'}\r\n              </button>\r\n              <button \r\n                className=\"chat-control-btn\"\r\n                onClick={clearChat}\r\n                title=\"Clear chat\"\r\n              >\r\n                🗑️\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {!isMinimized && (\r\n            <>\r\n              {/* Chat Messages */}\r\n              <div className=\"floating-chat-messages\">\r\n                {messages.map((msg, index) => (\r\n                  <div key={index} className={`floating-message ${msg.from}`}>\r\n                    {msg.from === 'bot' && (\r\n                      <div className=\"message-avatar bot\">🤖</div>\r\n                    )}\r\n                    <div className=\"message-bubble\">\r\n                      <div className=\"message-text\">\r\n                        {msg.text.split('\\n').map((line, i) => (\r\n                          <div key={i}>{line}</div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"message-time\">\r\n                        {formatTime(msg.timestamp)}\r\n                      </div>\r\n                    </div>\r\n                    {msg.from === 'user' && (\r\n                      <div className=\"message-avatar user\">👤</div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                \r\n                {isTyping && (\r\n                  <div className=\"floating-message bot\">\r\n                    <div className=\"message-avatar bot\">🤖</div>\r\n                    <div className=\"message-bubble typing\">\r\n                      <div className=\"typing-indicator\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              {/* Quick Actions */}\r\n              <div className=\"floating-quick-actions\">\r\n                {quickActions.map((action, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`quick-action-btn ${action.color}`}\r\n                    onClick={() => handleSend(action.text)}\r\n                  >\r\n                    {action.icon}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Chat Input */}\r\n              <div className=\"floating-chat-input\">\r\n                <div className=\"chat-input-wrapper\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n                    placeholder=\"Ask me anything...\"\r\n                    className=\"chat-input\"\r\n                  />\r\n                  <button\r\n                    onClick={() => handleSend()}\r\n                    disabled={!input.trim() || isTyping}\r\n                    className=\"chat-send-btn\"\r\n                  >\r\n                    <span className=\"send-icon\">🚀</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}