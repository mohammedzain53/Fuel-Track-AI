{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport { chatbotMessage } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi! Ask me to find gas stations nearby or ask about your fuel expenses.'\n  }]);\n  const [input, setInput] = useState('');\n  async function send() {\n    var _pos, _pos2;\n    if (!input) return;\n    const userMsg = {\n      from: 'user',\n      text: input\n    };\n    setMessages(m => [...m, userMsg]);\n    // try to get location if message asks for 'near' or 'nearby'\n    let pos = null;\n    if (/(near|nearby|around|close)/i.test(input)) {\n      try {\n        pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => resolve(null));\n        });\n      } catch (e) {\n        pos = null;\n      }\n    }\n    const payload = {\n      text: input,\n      lat: (_pos = pos) === null || _pos === void 0 ? void 0 : _pos.latitude,\n      lng: (_pos2 = pos) === null || _pos2 === void 0 ? void 0 : _pos2.longitude\n    };\n    const res = await chatbotMessage(payload);\n    const botReply = res.reply || (res.data ? formatStationResponse(res) : \"I couldn't find anything.\");\n    setMessages(m => [...m, {\n      from: 'bot',\n      text: botReply\n    }]);\n    setInput('');\n  }\n  function formatStationResponse(res) {\n    // Handle the new station response format\n    if (res.hasStations && res.stations) {\n      return res.reply; // The backend now formats the response\n    }\n\n    // Fallback for direct API responses\n    if (res.success && res.stations) {\n      const stationList = res.stations.slice(0, 5).map((station, index) => `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`).join('\\n\\n');\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\n    }\n\n    // Legacy format support\n    if (res.data && res.data.results) {\n      return res.data.results.slice(0, 5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\n    }\n    if (res.data && res.data.elements) {\n      return res.data.elements.slice(0, 5).map(e => `${e.name || 'Unknown'} — ${e.address || ''}`).join('\\n');\n    }\n    return res.reply || \"I couldn't find any stations nearby.\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"gradient-text mb-0\",\n        children: \"\\uD83E\\uDD16 AI Fuel Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: \"Ask me about your fuel expenses or find nearby stations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 350,\n        overflow: 'auto'\n      },\n      className: \"mb-3 p-3 bg-light rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${m.from}`,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              margin: 0,\n              whiteSpace: 'pre-wrap',\n              fontFamily: 'inherit'\n            },\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && send(),\n        placeholder: \"Ask: 'find gas stations near me' or 'how much have I spent?'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary px-4\",\n        onClick: send,\n        disabled: !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: \"\\uD83D\\uDCA1 Try: \\\"find stations\\\", \\\"monthly expenses\\\", \\\"average price\\\", \\\"last fill-up\\\", or \\\"help\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"2D/4wYQ8YY4FZz3Sx4Cs9uJ1Rek=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","chatbotMessage","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","from","text","input","setInput","send","_pos","_pos2","userMsg","m","pos","test","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","p","coords","err","e","payload","lat","latitude","lng","longitude","res","botReply","reply","data","formatStationResponse","hasStations","stations","success","stationList","slice","map","station","index","name","address","distance","join","length","results","s","vicinity","formatted_address","elements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","overflow","i","margin","whiteSpace","fontFamily","value","onChange","target","onKeyPress","key","placeholder","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/Chatbot.js"],"sourcesContent":["// frontend/src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport { chatbotMessage } from '../services/api';\r\n\r\nexport default function Chatbot(){\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi! Ask me to find gas stations nearby or ask about your fuel expenses.' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  async function send(){\r\n    if(!input) return;\r\n    const userMsg = { from:'user', text: input };\r\n    setMessages(m=>[...m, userMsg]);\r\n    // try to get location if message asks for 'near' or 'nearby'\r\n    let pos = null;\r\n    if (/(near|nearby|around|close)/i.test(input)) {\r\n      try {\r\n        pos = await new Promise((resolve, reject) => {\r\n          navigator.geolocation.getCurrentPosition(p => resolve(p.coords), err => resolve(null));\r\n        });\r\n      } catch(e){ pos = null; }\r\n    }\r\n\r\n    const payload = {\r\n      text: input,\r\n      lat: pos?.latitude,\r\n      lng: pos?.longitude\r\n    };\r\n\r\n    const res = await chatbotMessage(payload);\r\n    const botReply = res.reply || (res.data ? formatStationResponse(res) : \"I couldn't find anything.\");\r\n    setMessages(m=>[...m, { from:'bot', text: botReply }]);\r\n    setInput('');\r\n  }\r\n\r\n  function formatStationResponse(res){\r\n    // Handle the new station response format\r\n    if (res.hasStations && res.stations) {\r\n      return res.reply; // The backend now formats the response\r\n    }\r\n    \r\n    // Fallback for direct API responses\r\n    if (res.success && res.stations) {\r\n      const stationList = res.stations.slice(0, 5).map((station, index) => \r\n        `${index + 1}. ${station.name}\\n   📍 ${station.address}\\n   📏 ${station.distance ? `${station.distance}m away` : ''}`\r\n      ).join('\\n\\n');\r\n      return `Found ${res.stations.length} stations:\\n\\n${stationList}`;\r\n    }\r\n    \r\n    // Legacy format support\r\n    if (res.data && res.data.results) {\r\n      return res.data.results.slice(0,5).map(s => `${s.name} — ${s.vicinity || s.formatted_address}`).join('\\n');\r\n    }\r\n    if (res.data && res.data.elements) {\r\n      return res.data.elements.slice(0,5).map(e => `${e.name || 'Unknown'} — ${e.address || ''}`).join('\\n');\r\n    }\r\n    \r\n    return res.reply || \"I couldn't find any stations nearby.\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chatbot-container p-4\">\r\n      <div className=\"mb-3\">\r\n        <h4 className=\"gradient-text mb-0\">🤖 AI Fuel Assistant</h4>\r\n        <small className=\"text-muted\">Ask me about your fuel expenses or find nearby stations!</small>\r\n      </div>\r\n      \r\n      <div style={{height:350, overflow:'auto'}} className=\"mb-3 p-3 bg-light rounded\">\r\n        <div className=\"d-flex flex-column\">\r\n          {messages.map((m,i)=>(\r\n            <div key={i} className={`chat-message ${m.from}`}>\r\n              <pre style={{margin:0,whiteSpace:'pre-wrap', fontFamily:'inherit'}}>{m.text}</pre>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex gap-2\">\r\n        <input \r\n          className=\"form-control\" \r\n          value={input} \r\n          onChange={e=>setInput(e.target.value)}\r\n          onKeyPress={e => e.key === 'Enter' && send()}\r\n          placeholder=\"Ask: 'find gas stations near me' or 'how much have I spent?'\" \r\n        />\r\n        <button className=\"btn btn-primary px-4\" onClick={send} disabled={!input.trim()}>\r\n          Send\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"mt-2\">\r\n        <small className=\"text-muted\">\r\n          💡 Try: \"find stations\", \"monthly expenses\", \"average price\", \"last fill-up\", or \"help\"\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}