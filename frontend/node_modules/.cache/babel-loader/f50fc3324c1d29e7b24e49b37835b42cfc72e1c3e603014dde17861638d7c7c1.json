{"ast":null,"code":"var _jsxFileName = \"C:\\\\Fuel-Track-AI\\\\frontend\\\\src\\\\components\\\\StationSearch.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/StationSearch.js\nimport React, { useState } from 'react';\nimport { findStations } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StationSearch({\n  onStationSelect\n}) {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [manualLocation, setManualLocation] = useState({\n    lat: '',\n    lng: ''\n  });\n  const [showManualInput, setShowManualInput] = useState(false);\n  async function searchNearby() {\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by this browser. Please enable location services.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setStations([]);\n    try {\n      // Request location with high accuracy\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 60000 // 1 minute cache for more accurate results\n        });\n      });\n      const {\n        latitude,\n        longitude,\n        accuracy,\n        altitude,\n        heading,\n        speed\n      } = position.coords;\n      console.log(`Location detected: ${latitude.toFixed(6)}, ${longitude.toFixed(6)} (accuracy: ${accuracy}m)`);\n      console.log(`Additional info: altitude: ${altitude}m, heading: ${heading}°, speed: ${speed}m/s`);\n\n      // Check if coordinates are reasonable for India\n      const isInIndia = latitude >= 6.0 && latitude <= 37.0 && longitude >= 68.0 && longitude <= 97.0;\n      if (!isInIndia) {\n        setError(`🌍 Location seems incorrect (${latitude.toFixed(4)}, ${longitude.toFixed(4)}). This doesn't appear to be in India. Please check your location settings.`);\n        return;\n      }\n\n      // Warn if location accuracy is poor\n      if (accuracy > 1000) {\n        setError(`⚠️ Location accuracy is low (${Math.round(accuracy)}m). Results may not be precise. Try moving to an open area for better GPS signal.`);\n      } else if (accuracy > 100) {\n        setError(`📍 Location accuracy is moderate (${Math.round(accuracy)}m). For best results, ensure you're outdoors with clear sky view.`);\n      }\n\n      // Show detected location to user for verification\n      setError(`📍 Location detected: ${latitude.toFixed(4)}, ${longitude.toFixed(4)} (±${Math.round(accuracy)}m)\\n\\n🔍 Please verify this is your current location. If not, use the Manual option below.`);\n      const data = await findStations(latitude, longitude);\n      if (data.success && data.stations) {\n        // New unified format\n        setStations(data.stations.map(station => ({\n          name: station.name,\n          vicinity: station.address,\n          place_id: station.id,\n          brand: station.brand,\n          distance: station.distance,\n          fuelTypes: station.fuelTypes,\n          openingHours: station.openingHours,\n          googleMapsUrl: station.googleMapsUrl,\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\n          coordinates: station.coordinates,\n          geometry: {\n            location: {\n              lat: station.lat,\n              lng: station.lng\n            }\n          }\n        })));\n      } else if (data.provider === 'google' && data.data && data.data.results) {\n        // Legacy Google format\n        setStations(data.data.results);\n      } else if (data.provider === 'osm' && data.data && data.data.elements) {\n        // Legacy OSM format\n        setStations(data.data.elements.map(e => ({\n          name: e.name || 'Unknown Station',\n          vicinity: e.address || 'Unknown Address',\n          place_id: e.id,\n          brand: e.brand,\n          distance: e.distance,\n          geometry: {\n            location: {\n              lat: e.lat,\n              lng: e.lon\n            }\n          }\n        })));\n      } else {\n        setStations([]);\n        setError('No stations found in your area. Try expanding your search or check your location.');\n      }\n    } catch (err) {\n      console.error('Station search error:', err);\n      if (err.code === 1) {\n        setError('❌ Location access denied. Please:\\n1. Click the location icon in your browser\\n2. Select \"Allow\" for location access\\n3. Try searching again');\n      } else if (err.code === 2) {\n        setError('📍 Location unavailable. Please check:\\n1. GPS is enabled on your device\\n2. You have internet connection\\n3. Try again in a few moments');\n      } else if (err.code === 3) {\n        setError('⏱️ Location request timed out. This might be due to:\\n1. Weak GPS signal\\n2. Try moving to an open area\\n3. Refresh and try again');\n      } else {\n        setError('⚠️ Failed to find stations. Please:\\n1. Check your internet connection\\n2. Ensure location services are enabled\\n3. Try again or add stations manually');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function searchManualLocation() {\n    if (!manualLocation.lat || !manualLocation.lng) {\n      setError('Please enter both latitude and longitude');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setStations([]);\n    try {\n      const data = await findStations(parseFloat(manualLocation.lat), parseFloat(manualLocation.lng));\n      if (data.success && data.stations) {\n        setStations(data.stations.map(station => ({\n          name: station.name,\n          vicinity: station.address,\n          place_id: station.id,\n          brand: station.brand,\n          distance: station.distance,\n          fuelTypes: station.fuelTypes,\n          openingHours: station.openingHours,\n          googleMapsUrl: station.googleMapsUrl,\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\n          coordinates: station.coordinates,\n          geometry: {\n            location: {\n              lat: station.lat,\n              lng: station.lng\n            }\n          }\n        })));\n      } else {\n        setStations([]);\n        setError('No stations found at the specified location.');\n      }\n    } catch (err) {\n      console.error('Manual search error:', err);\n      setError('Failed to search at the specified location. Please check coordinates and try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n  function selectStation(station) {\n    if (onStationSelect) {\n      onStationSelect({\n        name: station.name,\n        placeId: station.place_id,\n        address: station.vicinity || station.formatted_address,\n        brand: station.brand,\n        distance: station.distance\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Find Nearby Gas Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary flex-fill\",\n          onClick: searchNearby,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), \"Searching...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\uD83D\\uDCCD Use My Location\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => setShowManualInput(!showManualInput),\n          children: \"\\uD83D\\uDCDD Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), showManualInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 p-3 bg-light rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Enter Location Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              className: \"form-control form-control-sm\",\n              placeholder: \"Latitude\",\n              value: manualLocation.lat,\n              onChange: e => setManualLocation({\n                ...manualLocation,\n                lat: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              className: \"form-control form-control-sm\",\n              placeholder: \"Longitude\",\n              value: manualLocation.lng,\n              onChange: e => setManualLocation({\n                ...manualLocation,\n                lng: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-success mt-2 w-100\",\n          onClick: searchManualLocation,\n          disabled: loading,\n          children: \"Search This Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted d-block mt-1\",\n          children: \"\\uD83D\\uDCA1 You can get coordinates from Google Maps by right-clicking on a location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), stations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"\\u26FD Found \", stations.length, \" Nearby Stations:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted mb-2 d-block\",\n          children: \"\\uD83D\\uDCCD Showing stations within 3km of your location. Click \\\"View\\\" to verify on Google Maps.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: stations.slice(0, 10).map((station, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex w-100 justify-content-between align-items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-grow-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mb-1\",\n                  children: [station.name, station.brand && station.brand !== station.name && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: [\" (\", station.brand, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), station.distance && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-primary\",\n                  children: [\"\\uD83D\\uDCCF \", station.distance, \"m away\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group btn-group-sm\",\n                children: [station.googleMapsUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: station.googleMapsUrl,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"btn btn-outline-primary btn-sm\",\n                  title: \"View on Google Maps\",\n                  onClick: e => e.stopPropagation(),\n                  children: \"\\uD83D\\uDDFA\\uFE0F View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), station.googleMapsDirectionsUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: station.googleMapsDirectionsUrl,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"btn btn-outline-success btn-sm\",\n                  title: \"Get Directions\",\n                  onClick: e => e.stopPropagation(),\n                  children: \"\\uD83E\\uDDED Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2 text-muted\",\n              children: [\"\\uD83D\\uDCCD \", station.vicinity || station.formatted_address || 'Address not available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), station.coordinates && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-secondary\",\n                children: [\"\\uD83D\\uDCCC \", station.coordinates]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this), station.fuelTypes && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-info\",\n                children: [\"\\u26FD \", station.fuelTypes.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 21\n            }, this), station.openingHours && station.openingHours !== 'Unknown' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-warning\",\n                children: [\"\\uD83D\\uDD52 \", station.openingHours]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success btn-sm w-100\",\n              onClick: () => selectStation(station),\n              children: \"\\u2728 Use This Station\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, station.place_id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"\\uD83D\\uDCA1 Click on any station to auto-fill it in your fuel entry form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(StationSearch, \"VjGwH3Ay2ig2W0+/8ArsKJ1NrR0=\");\n_c = StationSearch;\nvar _c;\n$RefreshReg$(_c, \"StationSearch\");","map":{"version":3,"names":["React","useState","findStations","jsxDEV","_jsxDEV","Fragment","_Fragment","StationSearch","onStationSelect","_s","stations","setStations","loading","setLoading","error","setError","manualLocation","setManualLocation","lat","lng","showManualInput","setShowManualInput","searchNearby","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","accuracy","altitude","heading","speed","coords","console","log","toFixed","isInIndia","Math","round","data","success","map","station","name","vicinity","address","place_id","id","brand","distance","fuelTypes","openingHours","googleMapsUrl","googleMapsDirectionsUrl","coordinates","geometry","location","provider","results","elements","e","lon","err","code","searchManualLocation","parseFloat","selectStation","placeId","formatted_address","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","step","placeholder","value","onChange","target","role","length","slice","index","href","rel","title","stopPropagation","join","_c","$RefreshReg$"],"sources":["C:/Fuel-Track-AI/frontend/src/components/StationSearch.js"],"sourcesContent":["// frontend/src/components/StationSearch.js\r\nimport React, { useState } from 'react';\r\nimport { findStations } from '../services/api';\r\n\r\nexport default function StationSearch({ onStationSelect }) {\r\n  const [stations, setStations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [manualLocation, setManualLocation] = useState({ lat: '', lng: '' });\r\n  const [showManualInput, setShowManualInput] = useState(false);\r\n\r\n  async function searchNearby() {\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by this browser. Please enable location services.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setStations([]);\r\n\r\n    try {\r\n      // Request location with high accuracy\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          resolve, \r\n          reject, \r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 20000,\r\n            maximumAge: 60000 // 1 minute cache for more accurate results\r\n          }\r\n        );\r\n      });\r\n\r\n      const { latitude, longitude, accuracy, altitude, heading, speed } = position.coords;\r\n      \r\n      console.log(`Location detected: ${latitude.toFixed(6)}, ${longitude.toFixed(6)} (accuracy: ${accuracy}m)`);\r\n      console.log(`Additional info: altitude: ${altitude}m, heading: ${heading}°, speed: ${speed}m/s`);\r\n      \r\n      // Check if coordinates are reasonable for India\r\n      const isInIndia = latitude >= 6.0 && latitude <= 37.0 && longitude >= 68.0 && longitude <= 97.0;\r\n      if (!isInIndia) {\r\n        setError(`🌍 Location seems incorrect (${latitude.toFixed(4)}, ${longitude.toFixed(4)}). This doesn't appear to be in India. Please check your location settings.`);\r\n        return;\r\n      }\r\n      \r\n      // Warn if location accuracy is poor\r\n      if (accuracy > 1000) {\r\n        setError(`⚠️ Location accuracy is low (${Math.round(accuracy)}m). Results may not be precise. Try moving to an open area for better GPS signal.`);\r\n      } else if (accuracy > 100) {\r\n        setError(`📍 Location accuracy is moderate (${Math.round(accuracy)}m). For best results, ensure you're outdoors with clear sky view.`);\r\n      }\r\n      \r\n      // Show detected location to user for verification\r\n      setError(`📍 Location detected: ${latitude.toFixed(4)}, ${longitude.toFixed(4)} (±${Math.round(accuracy)}m)\\n\\n🔍 Please verify this is your current location. If not, use the Manual option below.`);\r\n      \r\n      const data = await findStations(latitude, longitude);\r\n      \r\n      if (data.success && data.stations) {\r\n        // New unified format\r\n        setStations(data.stations.map(station => ({\r\n          name: station.name,\r\n          vicinity: station.address,\r\n          place_id: station.id,\r\n          brand: station.brand,\r\n          distance: station.distance,\r\n          fuelTypes: station.fuelTypes,\r\n          openingHours: station.openingHours,\r\n          googleMapsUrl: station.googleMapsUrl,\r\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\r\n          coordinates: station.coordinates,\r\n          geometry: { location: { lat: station.lat, lng: station.lng } }\r\n        })));\r\n      } else if (data.provider === 'google' && data.data && data.data.results) {\r\n        // Legacy Google format\r\n        setStations(data.data.results);\r\n      } else if (data.provider === 'osm' && data.data && data.data.elements) {\r\n        // Legacy OSM format\r\n        setStations(data.data.elements.map(e => ({\r\n          name: e.name || 'Unknown Station',\r\n          vicinity: e.address || 'Unknown Address',\r\n          place_id: e.id,\r\n          brand: e.brand,\r\n          distance: e.distance,\r\n          geometry: { location: { lat: e.lat, lng: e.lon } }\r\n        })));\r\n      } else {\r\n        setStations([]);\r\n        setError('No stations found in your area. Try expanding your search or check your location.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Station search error:', err);\r\n      \r\n      if (err.code === 1) {\r\n        setError('❌ Location access denied. Please:\\n1. Click the location icon in your browser\\n2. Select \"Allow\" for location access\\n3. Try searching again');\r\n      } else if (err.code === 2) {\r\n        setError('📍 Location unavailable. Please check:\\n1. GPS is enabled on your device\\n2. You have internet connection\\n3. Try again in a few moments');\r\n      } else if (err.code === 3) {\r\n        setError('⏱️ Location request timed out. This might be due to:\\n1. Weak GPS signal\\n2. Try moving to an open area\\n3. Refresh and try again');\r\n      } else {\r\n        setError('⚠️ Failed to find stations. Please:\\n1. Check your internet connection\\n2. Ensure location services are enabled\\n3. Try again or add stations manually');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function searchManualLocation() {\r\n    if (!manualLocation.lat || !manualLocation.lng) {\r\n      setError('Please enter both latitude and longitude');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setStations([]);\r\n\r\n    try {\r\n      const data = await findStations(parseFloat(manualLocation.lat), parseFloat(manualLocation.lng));\r\n      \r\n      if (data.success && data.stations) {\r\n        setStations(data.stations.map(station => ({\r\n          name: station.name,\r\n          vicinity: station.address,\r\n          place_id: station.id,\r\n          brand: station.brand,\r\n          distance: station.distance,\r\n          fuelTypes: station.fuelTypes,\r\n          openingHours: station.openingHours,\r\n          googleMapsUrl: station.googleMapsUrl,\r\n          googleMapsDirectionsUrl: station.googleMapsDirectionsUrl,\r\n          coordinates: station.coordinates,\r\n          geometry: { location: { lat: station.lat, lng: station.lng } }\r\n        })));\r\n      } else {\r\n        setStations([]);\r\n        setError('No stations found at the specified location.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Manual search error:', err);\r\n      setError('Failed to search at the specified location. Please check coordinates and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function selectStation(station) {\r\n    if (onStationSelect) {\r\n      onStationSelect({\r\n        name: station.name,\r\n        placeId: station.place_id,\r\n        address: station.vicinity || station.formatted_address,\r\n        brand: station.brand,\r\n        distance: station.distance\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h5>Find Nearby Gas Stations</h5>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex gap-2 mb-3\">\r\n          <button \r\n            className=\"btn btn-primary flex-fill\" \r\n            onClick={searchNearby}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <span className=\"loading-spinner me-2\"></span>\r\n                Searching...\r\n              </>\r\n            ) : (\r\n              <>📍 Use My Location</>\r\n            )}\r\n          </button>\r\n          <button \r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => setShowManualInput(!showManualInput)}\r\n          >\r\n            📝 Manual\r\n          </button>\r\n        </div>\r\n\r\n        {showManualInput && (\r\n          <div className=\"mb-3 p-3 bg-light rounded\">\r\n            <h6>Enter Location Manually</h6>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  className=\"form-control form-control-sm\"\r\n                  placeholder=\"Latitude\"\r\n                  value={manualLocation.lat}\r\n                  onChange={(e) => setManualLocation({...manualLocation, lat: e.target.value})}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  className=\"form-control form-control-sm\"\r\n                  placeholder=\"Longitude\"\r\n                  value={manualLocation.lng}\r\n                  onChange={(e) => setManualLocation({...manualLocation, lng: e.target.value})}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button \r\n              className=\"btn btn-sm btn-success mt-2 w-100\"\r\n              onClick={searchManualLocation}\r\n              disabled={loading}\r\n            >\r\n              Search This Location\r\n            </button>\r\n            <small className=\"text-muted d-block mt-1\">\r\n              💡 You can get coordinates from Google Maps by right-clicking on a location\r\n            </small>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {stations.length > 0 && (\r\n          <div>\r\n            <h6>⛽ Found {stations.length} Nearby Stations:</h6>\r\n            <small className=\"text-muted mb-2 d-block\">\r\n              📍 Showing stations within 3km of your location. Click \"View\" to verify on Google Maps.\r\n            </small>\r\n            <div className=\"list-group\">\r\n              {stations.slice(0, 10).map((station, index) => (\r\n                <div\r\n                  key={station.place_id || index}\r\n                  className=\"list-group-item\"\r\n                >\r\n                  <div className=\"d-flex w-100 justify-content-between align-items-start\">\r\n                    <div className=\"flex-grow-1\">\r\n                      <h6 className=\"mb-1\">\r\n                        {station.name}\r\n                        {station.brand && station.brand !== station.name && (\r\n                          <small className=\"text-muted\"> ({station.brand})</small>\r\n                        )}\r\n                      </h6>\r\n                      {station.distance && (\r\n                        <small className=\"text-primary\">📏 {station.distance}m away</small>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"btn-group btn-group-sm\">\r\n                      {station.googleMapsUrl && (\r\n                        <a\r\n                          href={station.googleMapsUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-outline-primary btn-sm\"\r\n                          title=\"View on Google Maps\"\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                          🗺️ View\r\n                        </a>\r\n                      )}\r\n                      {station.googleMapsDirectionsUrl && (\r\n                        <a\r\n                          href={station.googleMapsDirectionsUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"btn btn-outline-success btn-sm\"\r\n                          title=\"Get Directions\"\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                          🧭 Directions\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <p className=\"mb-2 text-muted\">\r\n                    📍 {station.vicinity || station.formatted_address || 'Address not available'}\r\n                  </p>\r\n                  \r\n                  {station.coordinates && (\r\n                    <p className=\"mb-1\">\r\n                      <small className=\"text-secondary\">📌 {station.coordinates}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {station.fuelTypes && (\r\n                    <p className=\"mb-1\">\r\n                      <small className=\"text-info\">⛽ {station.fuelTypes.join(', ')}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {station.openingHours && station.openingHours !== 'Unknown' && (\r\n                    <p className=\"mb-2\">\r\n                      <small className=\"text-warning\">🕒 {station.openingHours}</small>\r\n                    </p>\r\n                  )}\r\n                  \r\n                  <button\r\n                    className=\"btn btn-success btn-sm w-100\"\r\n                    onClick={() => selectStation(station)}\r\n                  >\r\n                    ✨ Use This Station\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <small className=\"text-muted\">\r\n                💡 Click on any station to auto-fill it in your fuel entry form\r\n              </small>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}